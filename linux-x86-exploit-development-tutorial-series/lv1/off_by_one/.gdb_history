ni
r `python -c 'print "A"*256'`
ni
ni
ni
i r esp
x/10xw 0xffffcd00-64
x/10xw 0xffffcd00-24
x/20xw 0xffffcd00-64
r `python -c 'print "A"*256'`
ni
stack 15
stack 50
ni
ni
bt
si
r `python -c 'print "A"*26'`
ni
r `python -c 'print "A"*222'`
ni
'
ni
r `python -c 'print "A"*1000'`
ni
r `python -c 'print "A"*1000'`
ni
stack 200
r `python -c 'print "A"*256'`
ni
si
ni
ni
ni
si
ni
stack 20
context
stack 100
ni
ni
x/xw 0xffffcd00
x/xw 0xffffce08
x/2xw 0xffffce08
x/20xw 0xffffce08
x/4xw 0xffffce08-16
x/6xw 0xffffce08-16
context
x/6xw 0xffffce08-16
b main
r `python -c 'print "A"*256'`
ni
si
ni
si
ni
ni
x/2xw 0xffffce08-4
b main 
r
r `python -c 'print "A"*256'`
ni
si
ni
si
ni
x/xw //vuln.c
#include <stdio.h>
#include <string.h>
void foo(char* arg);
void bar(char* arg);
void foo(char* arg) {
 bar(arg); /* [1] */
}
void bar(char* arg) {
 char buf[256];
 strcpy(buf, arg); /* [2] */
}
int main(int argc, char *argv[]) {
 if(strlen(argv[1])>256) { /* [3] */
  printf("Attempted Buffer Overflow\n");
  fflush(stdout);
  return -1;
 }
 foo(argv[1]); /* [4] */
 return 0;
}
context
x/xw 0x7fffffffdb10
x/100xw 0x7fffffffdb10
x/100xg 0x7fffffffdb10
ni
x/100xg 0x7fffffffdb10
stack 10
stack 200
context
ni
ni
ni
pattern create 256
r `python -c "print 'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAnAASAAoAATAApAAUAAqAAVAArAAWAAsAAXAAtAAYAAuAAZAAvAAwAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%b'"`
ni
si
ni
ni
r `python -c "print 'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAnAASAAoAATAApAAUAAqAAVAArAAWAAsAAXAAtAAYAAuAAZAAvAAwAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%b'"`
ni
si
ni
si
ni
stack 100
context
ni
pattern create 256
cat in
r `cat in`
ni
si
ni
si
ni
q
b main 
r `cat in`
n 5
ni
s
ni
si
ni
ni
pattern offset %0A%FA%b
q
i r
x/xw 0x7fffffffdc08
i r 
r
r `python exp.py `
q
b main 
r `python exp.py `
ni
si
fini
ni
ni
q
b main 
r `python exp.py `
n 10
ni
i r 
q
i r 
x/xw 0xffffce08
q
pattern create 256
q
i r 
pattern offset 0x41417541
q
i r
q
q
pattern offset 0x70414154
q
pattern offset 0x7a414179
i r 
q
b main 
r `cat in`
ni
b *0x80484c2
c
ni
si
ni
si
ni
x/65xw 0xffffcd28
ni
x/65xw 0xffffcd28
stack 
stack 00
stack 100
ni
ni
ni
ni
x/xw 0xffffcd28
x/xw 0xffffce08
x/100xw 0xffffce08
x/64xw 0xffffce08-256
q
b main 
r `cat in`
ni
n 20
n 20
q
i r 
r `cat in`
b main 
r `cat in`
q
b main 
r `cat in`
n 200
ni
n 50
ni
si
ni
r `cat in`
r `cat in`
q
b foo
r `cat in`
ni
si
ni
q
b main 
r `python exp.py `
b foo
c
ni
si
ni
ni
q
i r 
q
i r '
i r
x/xw 0xffffcd28:
x/xw 0xffffcd28
x/xw *0xffffcd28
x/xw 0xffffcd28
b foo 
r `python -c 'print "A"*256'`
ni
si
ni
q
i r 
q
q
q
q
q
i r 
q
i r 
q
